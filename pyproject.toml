[project]
name = "cogclassifier"
dynamic = ["version"]
description = "A tool for classifying prokaryote protein sequences into COG functional category"
authors = [{ name = "moshi4", email = "" }]
license = "MIT"
readme = "README.md"
keywords = [
    "COG",
    "bioinformatics",
    "genomics",
    "functional-annotation",
    "functional-analysis",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
requires-python = ">=3.9"
dependencies = ["requests>=2.27.1", "pandas>=1.4.1", "altair>=4.2.0"]

[project.urls]
repository = "https://github.com/moshi4/COGclassifier/"

[project.scripts]
COGclassifier = "cogclassifier.cogclassifier:main"
plot_cog_classifier_barchart = "cogclassifier.script.plot_cog_classifier_barchart:main"
plot_cog_classifier_piechart = "cogclassifier.script.plot_cog_classifier_piechart:main"

[tool.hatch.version]
path = "src/cogclassifier/__init__.py"

[tool.rye]
managed = true
dev-dependencies = [
    "ruff>=0.4.0",
    "pre-commit>=3.5.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "ipykernel>=6.13.0",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=src --tb=long -vv --cov-report=xml --cov-report=term"
testpaths = ["tests"]

[tool.ruff]
include = ["src/**.py", "tests/**.py"]
line-length = 88

# Lint Rules: https://docs.astral.sh/ruff/rules/
[tool.ruff.lint]
select = [
    "F", # pyflakes
    "E", # pycodestyle (Error)
    "W", # pycodestyle (Warning)
    "I", # isort
    "D", # pydocstyle
]
ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D205", # 1 blank line required between summary line and description
    "D400", # First line should end with a period
    "D401", # First line should be in imperative mood
    "D403", # First word of the first line should be properly capitalized
    "D415", # First line should end with a period, question mark, or exclamation point
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
